Pure-Python ``ast`` module
==========================

This is a pure-Python implementation of the "ast" module as described in
CPython documentation. It is written for the
`Pycopy <https://github.com/pfalcon/pycopy>`_ project, the minimalist
Python dialect, and is a part of its standard library,
`pycopy-lib <https://github.com/pfalcon/pycopy-lib>`_. However, it can
also run under CPython and other Python implementations.

Implementation-wise, it is laid out as a package, with the following
submodules:

* ``ast.types``, with AST node types auto-generated from CPython's ASDL
  description.
* ``ast.parser``, implementing hand-written parser for Python 3.6,
  utilizing recursive descent to parse statements, and Pratt operator
  precedence parser to parse expressions.
* ``ast``, the main package, integrating submodules above, and exposing
  CPython-compatible API with corresponding additional functions and
  classes to process AST trees.

At the time of writing, the parser supports Python 3.6 syntax. Updates
for the next versions of Python syntax are expected to follow.

The package has small builtin test corpus to check that the AST trees
match the ones generated by CPython, and can also use entire CPython
standard library as a test corpus, which it also can parse
correctly (but with some discrepancies, e.g. this module is optimized
for minimal size and doesn't support Unicode named escape sequences
(in the same way as Pycopy doesn't support them)).

Pycopy's ``ast`` module is written by Paul Sokolovsky and provided
under the MIT license.
