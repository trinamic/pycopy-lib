# This file is autogenerated
# This file is a part of pycopy-lib project, https://github.com/pfalcon/pycopy-lib
opmap = {
"BINARY_ADD": 0xf2,
"BINARY_AND": 0xef,
"BINARY_EQUAL": 0xd9,
"BINARY_EXCEPTION_MATCH": 0xdf,
"BINARY_FLOOR_DIVIDE": 0xf6,
"BINARY_IN": 0xdd,
"BINARY_IS": 0xde,
"BINARY_LESS": 0xd7,
"BINARY_LESS_EQUAL": 0xda,
"BINARY_LSHIFT": 0xf0,
"BINARY_MAT_MULTIPLY": 0xf5,
"BINARY_MODULO": 0xf8,
"BINARY_MORE": 0xd8,
"BINARY_MORE_EQUAL": 0xdb,
"BINARY_MULTIPLY": 0xf4,
"BINARY_NOT_EQUAL": 0xdc,
"BINARY_OP_MULTI": 0xd7,
"BINARY_OR": 0xed,
"BINARY_POWER": 0xf9,
"BINARY_RSHIFT": 0xf1,
"BINARY_SUBTRACT": 0xf3,
"BINARY_TRUE_DIVIDE": 0xf7,
"BINARY_XOR": 0xee,
"BUILD_LIST": 0x2b,
"BUILD_MAP": 0x2c,
"BUILD_SET": 0x2d,
"BUILD_SLICE": 0x2e,
"BUILD_TUPLE": 0x2a,
"CALL_FUNCTION": 0x34,
"CALL_FUNCTION_VAR_KW": 0x35,
"CALL_METHOD": 0x36,
"CALL_METHOD_VAR_KW": 0x37,
"DELETE_DEREF": 0x29,
"DELETE_FAST": 0x28,
"DELETE_GLOBAL": 0x1a,
"DELETE_NAME": 0x19,
"DUP_TOP": 0x57,
"DUP_TOP_TWO": 0x58,
"END_FINALLY": 0x5d,
"FORMAT_BYTE": 0x0,
"FORMAT_OFFSET": 0x3,
"FORMAT_QSTR": 0x1,
"FORMAT_VAR_UINT": 0x2,
"FOR_ITER": 0x4b,
"GET_ITER": 0x5e,
"GET_ITER_STACK": 0x5f,
"IMPORT_FROM": 0x1c,
"IMPORT_NAME": 0x1b,
"IMPORT_STAR": 0x66,
"INPLACE_ADD": 0xe5,
"INPLACE_AND": 0xe2,
"INPLACE_FLOOR_DIVIDE": 0xe9,
"INPLACE_LSHIFT": 0xe3,
"INPLACE_MAT_MULTIPLY": 0xe8,
"INPLACE_MODULO": 0xeb,
"INPLACE_MULTIPLY": 0xe7,
"INPLACE_OR": 0xe0,
"INPLACE_POWER": 0xec,
"INPLACE_RSHIFT": 0xe4,
"INPLACE_SUBTRACT": 0xe6,
"INPLACE_TRUE_DIVIDE": 0xea,
"INPLACE_XOR": 0xe1,
"JUMP": 0x42,
"JUMP_IF_FALSE_OR_POP": 0x46,
"JUMP_IF_TRUE_OR_POP": 0x45,
"LOAD_ATTR": 0x13,
"LOAD_BUILD_CLASS": 0x54,
"LOAD_CONST_FALSE": 0x50,
"LOAD_CONST_NONE": 0x51,
"LOAD_CONST_OBJ": 0x23,
"LOAD_CONST_SMALL_INT": 0x22,
"LOAD_CONST_SMALL_INT_MULTI": 0x70,
"LOAD_CONST_STRING": 0x10,
"LOAD_CONST_TRUE": 0x52,
"LOAD_DEREF": 0x25,
"LOAD_FAST_MULTI": 0xb0,
"LOAD_FAST_N": 0x24,
"LOAD_GLOBAL": 0x12,
"LOAD_METHOD": 0x14,
"LOAD_NAME": 0x11,
"LOAD_NULL": 0x53,
"LOAD_SUBSCR": 0x55,
"LOAD_SUPER_METHOD": 0x15,
"MAKE_CLOSURE": 0x20,
"MAKE_CLOSURE_DEFARGS": 0x21,
"MAKE_FUNCTION": 0x32,
"MAKE_FUNCTION_DEFARGS": 0x33,
"MASK_EXTRA_BYTE": 0x9e,
"MASK_FORMAT": 0xf0,
"POP_EXCEPT_JUMP": 0x4a,
"POP_JUMP_IF_FALSE": 0x44,
"POP_JUMP_IF_TRUE": 0x43,
"POP_TOP": 0x59,
"RAISE_VARARGS": 0x60,
"RETURN_VALUE": 0x63,
"ROT_THREE": 0x5b,
"ROT_TWO": 0x5a,
"SETUP_EXCEPT": 0x48,
"SETUP_FINALLY": 0x49,
"SETUP_WITH": 0x47,
"STORE_ATTR": 0x18,
"STORE_COMP": 0x2f,
"STORE_DEREF": 0x27,
"STORE_FAST_MULTI": 0xc0,
"STORE_FAST_N": 0x26,
"STORE_GLOBAL": 0x17,
"STORE_MAP": 0x62,
"STORE_NAME": 0x16,
"STORE_SUBSCR": 0x56,
"UNARY_INVERT": 0xd2,
"UNARY_NEGATIVE": 0xd1,
"UNARY_NOT": 0xd3,
"UNARY_OP_MULTI": 0xd0,
"UNARY_POSITIVE": 0xd0,
"UNPACK_EX": 0x31,
"UNPACK_SEQUENCE": 0x30,
"UNWIND_JUMP": 0x40,
"WITH_CLEANUP": 0x5c,
"YIELD_FROM": 0x65,
"YIELD_VALUE": 0x64,
}

opname = [
# 0x00
'FORMAT_BYTE', 'FORMAT_QSTR', 'FORMAT_VAR_UINT', 'FORMAT_OFFSET', None, None, None, None, 
# 0x08
None, None, None, None, None, None, None, None, 
# 0x10
'LOAD_CONST_STRING', 'LOAD_NAME', 'LOAD_GLOBAL', 'LOAD_ATTR', 'LOAD_METHOD', 'LOAD_SUPER_METHOD', 'STORE_NAME', 'STORE_GLOBAL', 
# 0x18
'STORE_ATTR', 'DELETE_NAME', 'DELETE_GLOBAL', 'IMPORT_NAME', 'IMPORT_FROM', None, None, None, 
# 0x20
'MAKE_CLOSURE', 'MAKE_CLOSURE_DEFARGS', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_OBJ', 'LOAD_FAST_N', 'LOAD_DEREF', 'STORE_FAST_N', 'STORE_DEREF', 
# 0x28
'DELETE_FAST', 'DELETE_DEREF', 'BUILD_TUPLE', 'BUILD_LIST', 'BUILD_MAP', 'BUILD_SET', 'BUILD_SLICE', 'STORE_COMP', 
# 0x30
'UNPACK_SEQUENCE', 'UNPACK_EX', 'MAKE_FUNCTION', 'MAKE_FUNCTION_DEFARGS', 'CALL_FUNCTION', 'CALL_FUNCTION_VAR_KW', 'CALL_METHOD', 'CALL_METHOD_VAR_KW', 
# 0x38
None, None, None, None, None, None, None, None, 
# 0x40
'UNWIND_JUMP', None, 'JUMP', 'POP_JUMP_IF_TRUE', 'POP_JUMP_IF_FALSE', 'JUMP_IF_TRUE_OR_POP', 'JUMP_IF_FALSE_OR_POP', 'SETUP_WITH', 
# 0x48
'SETUP_EXCEPT', 'SETUP_FINALLY', 'POP_EXCEPT_JUMP', 'FOR_ITER', None, None, None, None, 
# 0x50
'LOAD_CONST_FALSE', 'LOAD_CONST_NONE', 'LOAD_CONST_TRUE', 'LOAD_NULL', 'LOAD_BUILD_CLASS', 'LOAD_SUBSCR', 'STORE_SUBSCR', 'DUP_TOP', 
# 0x58
'DUP_TOP_TWO', 'POP_TOP', 'ROT_TWO', 'ROT_THREE', 'WITH_CLEANUP', 'END_FINALLY', 'GET_ITER', 'GET_ITER_STACK', 
# 0x60
'RAISE_VARARGS', None, 'STORE_MAP', 'RETURN_VALUE', 'YIELD_VALUE', 'YIELD_FROM', 'IMPORT_STAR', None, 
# 0x68
None, None, None, None, None, None, None, None, 
# 0x70
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0x78
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0x80
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0x88
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0x90
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0x98
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0xa0
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0xa8
'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 'LOAD_CONST_SMALL_INT', 
# 0xb0
'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 
# 0xb8
'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 'LOAD_FAST_MULTI', 
# 0xc0
'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 
# 0xc8
'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 'STORE_FAST_MULTI', 
# 0xd0
'UNARY_POSITIVE', 'UNARY_NEGATIVE', 'UNARY_INVERT', 'UNARY_NOT', None, None, None, 'BINARY_LESS', 
# 0xd8
'BINARY_MORE', 'BINARY_EQUAL', 'BINARY_LESS_EQUAL', 'BINARY_MORE_EQUAL', 'BINARY_NOT_EQUAL', 'BINARY_IN', 'BINARY_IS', 'BINARY_EXCEPTION_MATCH', 
# 0xe0
'INPLACE_OR', 'INPLACE_XOR', 'INPLACE_AND', 'INPLACE_LSHIFT', 'INPLACE_RSHIFT', 'INPLACE_ADD', 'INPLACE_SUBTRACT', 'INPLACE_MULTIPLY', 
# 0xe8
'INPLACE_MAT_MULTIPLY', 'INPLACE_FLOOR_DIVIDE', 'INPLACE_TRUE_DIVIDE', 'INPLACE_MODULO', 'INPLACE_POWER', 'BINARY_OR', 'BINARY_XOR', 'BINARY_AND', 
# 0xf0
'BINARY_LSHIFT', 'BINARY_RSHIFT', 'BINARY_ADD', 'BINARY_SUBTRACT', 'BINARY_MULTIPLY', 'BINARY_MAT_MULTIPLY', 'BINARY_FLOOR_DIVIDE', 'BINARY_TRUE_DIVIDE', 
# 0xf8
'BINARY_MODULO', 'BINARY_POWER', None, None, None, None, None, None, 
]

op_implicit_arg = [
# 0x00
None, None, None, None, None, None, None, None, 
# 0x08
None, None, None, None, None, None, None, None, 
# 0x10
None, None, None, None, None, None, None, None, 
# 0x18
None, None, None, None, None, None, None, None, 
# 0x20
None, None, None, None, None, None, None, None, 
# 0x28
None, None, None, None, None, None, None, None, 
# 0x30
None, None, None, None, None, None, None, None, 
# 0x38
None, None, None, None, None, None, None, None, 
# 0x40
None, None, None, None, None, None, None, None, 
# 0x48
None, None, None, None, None, None, None, None, 
# 0x50
None, None, None, None, None, None, None, None, 
# 0x58
None, None, None, None, None, None, None, None, 
# 0x60
None, None, None, None, None, None, None, None, 
# 0x68
None, None, None, None, None, None, None, None, 
# 0x70
-16, -15, -14, -13, -12, -11, -10, -9, 
# 0x78
-8, -7, -6, -5, -4, -3, -2, -1, 
# 0x80
0, 1, 2, 3, 4, 5, 6, 7, 
# 0x88
8, 9, 10, 11, 12, 13, 14, 15, 
# 0x90
16, 17, 18, 19, 20, 21, 22, 23, 
# 0x98
24, 25, 26, 27, 28, 29, 30, 31, 
# 0xa0
32, 33, 34, 35, 36, 37, 38, 39, 
# 0xa8
40, 41, 42, 43, 44, 45, 46, 47, 
# 0xb0
0, 1, 2, 3, 4, 5, 6, 7, 
# 0xb8
8, 9, 10, 11, 12, 13, 14, 15, 
# 0xc0
0, 1, 2, 3, 4, 5, 6, 7, 
# 0xc8
8, 9, 10, 11, 12, 13, 14, 15, 
# 0xd0
None, None, None, None, None, None, None, None, 
# 0xd8
None, None, None, None, None, None, None, None, 
# 0xe0
None, None, None, None, None, None, None, None, 
# 0xe8
None, None, None, None, None, None, None, None, 
# 0xf0
None, None, None, None, None, None, None, None, 
# 0xf8
None, None, None, None, None, None, None, None, 
]

op_stack_effect = [
# 0x00
None, None, None, None, None, None, None, None, 
# 0x08
None, None, None, None, None, None, None, None, 
# 0x10
1, 1, 1, 1, 1, 1, -1, -1, 
# 0x18
-1, None, None, -1, None, None, None, None, 
# 0x20
None, None, 1, 1, 1, 1, -1, -1, 
# 0x28
None, None, None, None, 1, None, None, -1, 
# 0x30
None, None, 1, None, None, None, None, None, 
# 0x38
None, None, None, None, None, None, None, None, 
# 0x40
None, None, 0, -1, -1, -1, -1, None, 
# 0x48
None, None, None, 1, None, None, None, None, 
# 0x50
1, 1, 1, 1, 1, 1, -1, 1, 
# 0x58
None, -1, None, None, None, None, None, 3, 
# 0x60
None, None, -2, -1, None, None, None, None, 
# 0x68
None, None, None, None, None, None, None, None, 
# 0x70
1, 1, 1, 1, 1, 1, 1, 1, 
# 0x78
1, 1, 1, 1, 1, 1, 1, 1, 
# 0x80
1, 1, 1, 1, 1, 1, 1, 1, 
# 0x88
1, 1, 1, 1, 1, 1, 1, 1, 
# 0x90
1, 1, 1, 1, 1, 1, 1, 1, 
# 0x98
1, 1, 1, 1, 1, 1, 1, 1, 
# 0xa0
1, 1, 1, 1, 1, 1, 1, 1, 
# 0xa8
1, 1, 1, 1, 1, 1, 1, 1, 
# 0xb0
1, 1, 1, 1, 1, 1, 1, 1, 
# 0xb8
1, 1, 1, 1, 1, 1, 1, 1, 
# 0xc0
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xc8
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xd0
0, 0, 0, 0, None, None, None, -1, 
# 0xd8
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xe0
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xe8
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xf0
-1, -1, -1, -1, -1, -1, -1, -1, 
# 0xf8
-1, -1, None, None, None, None, None, None, 
]
